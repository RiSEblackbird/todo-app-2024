name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and run docker-compose
      run: |
        docker-compose up -d
        docker-compose ps

    - name: Create database.yml
      env:
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        sudo mkdir -p backend/config
        sudo chown -R $USER:$USER backend/config
        echo "default: &default
          adapter: mysql2
          encoding: utf8mb4
          pool: <%= ENV.fetch('RAILS_MAX_THREADS') { 5 } %>
          username: root
          password: ${DB_PASSWORD}
          host: db
        
        test:
          <<: *default
          database: todo_app_test" > backend/config/database.yml

    - name: Setup database
      run: |
        docker-compose run --rm backend rails db:create RAILS_ENV=test
        docker-compose run --rm backend rails db:schema:load RAILS_ENV=test

    - name: Run backend tests
      run: docker-compose run --rm test

    - name: Run backend linter
      run: docker-compose run --rm backend bundle exec rubocop

    - name: Run security scan
      run: |
        docker-compose run --rm backend bundle exec brakeman

    - name: Build frontend
      run: docker-compose run --rm frontend npm run build

    - name: Run frontend security audit
      run: docker-compose run --rm frontend npm audit

    - name: Tear down docker-compose
      run: docker-compose down